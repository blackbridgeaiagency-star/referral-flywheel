const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function main() {
  console.log('='.repeat(80));
  console.log('üéØ REVENUE CALCULATION: CURRENT vs CORRECT APPROACH');
  console.log('='.repeat(80));
  console.log('');

  const creator = await prisma.creator.findFirst({
    where: { companyName: 'FitnessHub' },
    select: { id: true, companyName: true }
  });

  console.log(`Analyzing: ${creator.companyName}`);
  console.log('');

  // Get ALL members with their commissions
  const allMembers = await prisma.member.findMany({
    where: { creatorId: creator.id },
    select: {
      id: true,
      username: true,
      memberOrigin: true,
      subscriptionPrice: true,
      commissions: {
        where: { status: 'paid' },
        select: {
          saleAmount: true,
          creatorShare: true,
        },
      },
    },
  });

  // Separate organic vs referred
  const organicMembers = allMembers.filter(m => m.memberOrigin === 'organic');
  const referredMembers = allMembers.filter(m => m.memberOrigin === 'referred');

  // Calculate revenue for each group
  const organicRevenue = organicMembers.reduce((sum, member) => {
    const memberRevenue = member.commissions.reduce((s, c) => s + c.saleAmount, 0);
    return sum + memberRevenue;
  }, 0);

  const referredRevenue = referredMembers.reduce((sum, member) => {
    const memberRevenue = member.commissions.reduce((s, c) => s + c.saleAmount, 0);
    return sum + memberRevenue;
  }, 0);

  const totalRevenue = organicRevenue + referredRevenue;

  // Calculate MRR for each group
  const organicMRR = organicMembers.reduce((sum, m) => sum + (m.subscriptionPrice || 0), 0);
  const referredMRR = referredMembers.reduce((sum, m) => sum + (m.subscriptionPrice || 0), 0);
  const totalMRR = organicMRR + referredMRR;

  console.log('‚îÄ'.repeat(80));
  console.log('‚ùå CURRENT APPROACH (WRONG)');
  console.log('‚îÄ'.repeat(80));
  console.log('');
  console.log('Shows ALL revenue (organic + referred):');
  console.log(`  Total Revenue: $${totalRevenue.toFixed(2)}`);
  console.log(`  Monthly Revenue (MRR): $${totalMRR.toFixed(2)}`);
  console.log('');
  console.log('Problem: This includes revenue you would have had anyway!');
  console.log('         Doesn\'t show the VALUE of the referral app.');
  console.log('');

  console.log('‚îÄ'.repeat(80));
  console.log('‚úÖ CORRECT APPROACH (WHAT YOU WANT)');
  console.log('‚îÄ'.repeat(80));
  console.log('');
  console.log('Show ONLY revenue from REFERRED members:');
  console.log(`  Total Revenue: $${referredRevenue.toFixed(2)} (from referrals)`);
  console.log(`  Monthly Revenue (MRR): $${referredMRR.toFixed(2)} (from referrals)`);
  console.log('');
  console.log('Benefit: Shows exactly how much extra money the app is generating!');
  console.log('         This is revenue you wouldn\'t have without referrals.');
  console.log('');

  console.log('‚îÄ'.repeat(80));
  console.log('üìä DETAILED BREAKDOWN');
  console.log('‚îÄ'.repeat(80));
  console.log('');
  console.log('TOTAL MEMBERS:', allMembers.length);
  console.log(`‚îú‚îÄ Organic:  ${organicMembers.length} (${(organicMembers.length/allMembers.length*100).toFixed(1)}%)`);
  console.log(`‚îî‚îÄ Referred: ${referredMembers.length} (${(referredMembers.length/allMembers.length*100).toFixed(1)}%)`);
  console.log('');
  console.log('ALL-TIME REVENUE:', '$' + totalRevenue.toFixed(2));
  console.log(`‚îú‚îÄ From Organic:  $${organicRevenue.toFixed(2)} (${(organicRevenue/totalRevenue*100).toFixed(1)}%) - Would have anyway`);
  console.log(`‚îî‚îÄ From Referred: $${referredRevenue.toFixed(2)} (${(referredRevenue/totalRevenue*100).toFixed(1)}%) - ‚ú® Generated by app`);
  console.log('');
  console.log('MONTHLY RECURRING REVENUE (MRR):', '$' + totalMRR.toFixed(2));
  console.log(`‚îú‚îÄ From Organic:  $${organicMRR.toFixed(2)} (${(organicMRR/totalMRR*100).toFixed(1)}%)`);
  console.log(`‚îî‚îÄ From Referred: $${referredMRR.toFixed(2)} (${(referredMRR/totalMRR*100).toFixed(1)}%) - ‚ú® App's monthly value`);
  console.log('');

  // Calculate creator's take-home from referrals
  const referredCreatorShare = referredMembers.reduce((sum, member) => {
    const creatorEarnings = member.commissions.reduce((s, c) => s + c.creatorShare, 0);
    return sum + creatorEarnings;
  }, 0);

  console.log('‚îÄ'.repeat(80));
  console.log('üí∞ CREATOR\'S BENEFIT FROM REFERRAL APP');
  console.log('‚îÄ'.repeat(80));
  console.log('');
  console.log(`Total Revenue Generated by App: $${referredRevenue.toFixed(2)}`);
  console.log(`Creator's 70% Share: $${referredCreatorShare.toFixed(2)}`);
  console.log(`Monthly Recurring from Referrals: $${referredMRR.toFixed(2)}/month`);
  console.log('');
  console.log('This is the EXTRA money the creator is making thanks to your app!');
  console.log('');

  console.log('‚îÄ'.repeat(80));
  console.log('üéØ WHAT THE DASHBOARD SHOULD SHOW');
  console.log('‚îÄ'.repeat(80));
  console.log('');
  console.log('Card 1: Total Revenue');
  console.log(`  Display: $${referredRevenue.toFixed(2)}`);
  console.log('  Label: "Revenue from Referrals" or "Referral-Generated Revenue"');
  console.log('  Subtitle: "Revenue generated by your referral program"');
  console.log('');
  console.log('Card 2: Monthly Revenue');
  console.log(`  Display: $${referredMRR.toFixed(2)}`);
  console.log('  Label: "Monthly Recurring from Referrals"');
  console.log('  Subtitle: "Ongoing monthly revenue from referred members"');
  console.log('');

  console.log('='.repeat(80));
  console.log('üìù SUMMARY');
  console.log('='.repeat(80));
  console.log('');
  console.log('CHANGE NEEDED:');
  console.log('  ‚ùå OLD: Count ALL commissions (organic + referred)');
  console.log('  ‚úÖ NEW: Count ONLY commissions from referred members');
  console.log('');
  console.log('WHY:');
  console.log('  - Shows the VALUE of the referral app');
  console.log('  - Demonstrates ROI for the creator');
  console.log('  - Tracks incremental revenue, not total revenue');
  console.log('');
  console.log('IMPACT FOR FITNESSHUB:');
  console.log(`  - Currently showing: $${totalRevenue.toFixed(2)} (misleading)`);
  console.log(`  - Should show: $${referredRevenue.toFixed(2)} (accurate app value)`);
  console.log(`  - Difference: $${(totalRevenue - referredRevenue).toFixed(2)} (organic, had anyway)`);
  console.log('');

  await prisma.$disconnect();
}

main().catch(console.error);
